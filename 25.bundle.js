(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{139:function(t,e,i){"use strict";i.d(e,"h",(function(){return MaxPooling1D})),i.d(e,"a",(function(){return AveragePooling1D})),i.d(e,"i",(function(){return MaxPooling2D})),i.d(e,"b",(function(){return AveragePooling2D})),i.d(e,"j",(function(){return MaxPooling3D})),i.d(e,"c",(function(){return AveragePooling3D})),i.d(e,"d",(function(){return GlobalAveragePooling1D})),i.d(e,"f",(function(){return GlobalMaxPooling1D})),i.d(e,"e",(function(){return GlobalAveragePooling2D})),i.d(e,"g",(function(){return GlobalMaxPooling2D}));var a=i(0),n=i(50),s=i(21),o=i(31),r=i(20),l=i(8),d=i(54),g=i(12),c=i(16),p=i(104);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function h(t,e,i,s,r,l){return Object(a.Af)(()=>{let d;Object(o.a)(r),Object(o.d)(l),Object(o.c)(s),null==i&&(i=[1,1]),null==s&&(s="valid"),null==r&&(r=Object(n.b)()),null==l&&(l="max"),t=Object(p.j)(t,r);const g="same"===s?"same":"valid";return d="max"===l?a.Ae(t,e,i,g):a.xd(t,e,i,g),"channelsFirst"===r&&(d=a.Df(d,[0,3,1,2])),d})}function u(t,e,i,s,r,l){return Object(a.Af)(()=>{let d;Object(o.a)(r),Object(o.d)(l),Object(o.c)(s),null==i&&(i=[1,1,1]),null==s&&(s="valid"),null==r&&(r=Object(n.b)()),null==l&&(l="max"),t=Object(p.k)(t,r);const g="same"===s?"same":"valid";return d="max"===l?a.Be(t,e,i,g):a.yd(t,e,i,g),"channelsFirst"===r&&(d=a.Df(d,[0,4,1,2,3])),d})}class Pooling1D extends r.b{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new l.e("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.poolSize));this.poolSize=t.poolSize}if(Object(g.b)(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new l.e("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.strides));this.strides=t.strides}Object(g.b)(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Object(o.c)(this.padding),this.inputSpec=[new r.a({ndim:3})]}computeOutputShape(t){t=Object(c.a)(t);const e=Object(d.a)(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Object(a.Af)(()=>{this.invokeCallHook(t,e),t=s.i(Object(c.b)(t),2);const i=this.poolingFunction(Object(c.b)(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return a.qf(i,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class MaxPooling1D extends Pooling1D{constructor(t){super(t)}poolingFunction(t,e,i,a,n){return Object(o.a)(n),Object(o.c)(a),h(t,e,i,a,n,"max")}}MaxPooling1D.className="MaxPooling1D",a.df.registerClass(MaxPooling1D);class AveragePooling1D extends Pooling1D{constructor(t){super(t)}poolingFunction(t,e,i,a,n){return Object(o.a)(n),Object(o.c)(a),h(t,e,i,a,n,"avg")}}AveragePooling1D.className="AveragePooling1D",a.df.registerClass(AveragePooling1D);class Pooling2D extends r.b{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new l.e("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides];Object(g.b)(this.poolSize,"poolSize"),Object(g.b)(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Object(o.a)(this.dataFormat),Object(o.c)(this.padding),this.inputSpec=[new r.a({ndim:4})]}computeOutputShape(t){t=Object(c.a)(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],i="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Object(d.a)(e,this.poolSize[0],this.padding,this.strides[0]),i=Object(d.a)(i,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,i]:[t[0],e,i,t[3]]}call(t,e){return Object(a.Af)(()=>(this.invokeCallHook(t,e),this.poolingFunction(Object(c.b)(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class MaxPooling2D extends Pooling2D{constructor(t){super(t)}poolingFunction(t,e,i,a,n){return Object(o.a)(n),Object(o.c)(a),h(t,e,i,a,n,"max")}}MaxPooling2D.className="MaxPooling2D",a.df.registerClass(MaxPooling2D);class AveragePooling2D extends Pooling2D{constructor(t){super(t)}poolingFunction(t,e,i,a,n){return Object(o.a)(n),Object(o.c)(a),h(t,e,i,a,n,"avg")}}AveragePooling2D.className="AveragePooling2D",a.df.registerClass(AveragePooling2D);class Pooling3D extends r.b{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new l.e("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Object(g.b)(this.poolSize,"poolSize"),Object(g.b)(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Object(o.a)(this.dataFormat),Object(o.c)(this.padding),this.inputSpec=[new r.a({ndim:5})]}computeOutputShape(t){t=Object(c.a)(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],i="channelsFirst"===this.dataFormat?t[3]:t[2],a="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Object(d.a)(e,this.poolSize[0],this.padding,this.strides[0]),i=Object(d.a)(i,this.poolSize[1],this.padding,this.strides[1]),a=Object(d.a)(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,i,a]:[t[0],e,i,a,t[4]]}call(t,e){return Object(a.Af)(()=>(this.invokeCallHook(t,e),this.poolingFunction(Object(c.b)(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class MaxPooling3D extends Pooling3D{constructor(t){super(t)}poolingFunction(t,e,i,a,n){return Object(o.a)(n),Object(o.c)(a),u(t,e,i,a,n,"max")}}MaxPooling3D.className="MaxPooling3D",a.df.registerClass(MaxPooling3D);class AveragePooling3D extends Pooling3D{constructor(t){super(t)}poolingFunction(t,e,i,a,n){return Object(o.a)(n),Object(o.c)(a),u(t,e,i,a,n,"avg")}}AveragePooling3D.className="AveragePooling3D",a.df.registerClass(AveragePooling3D);class GlobalPooling1D extends r.b{constructor(t){super(t),this.inputSpec=[new r.a({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new l.c}}class GlobalAveragePooling1D extends GlobalPooling1D{constructor(t){super(t||{})}call(t,e){return Object(a.Af)(()=>{const e=Object(c.b)(t);return a.De(e,1)})}}GlobalAveragePooling1D.className="GlobalAveragePooling1D",a.df.registerClass(GlobalAveragePooling1D);class GlobalMaxPooling1D extends GlobalPooling1D{constructor(t){super(t||{})}call(t,e){return Object(a.Af)(()=>{const e=Object(c.b)(t);return a.ze(e,1)})}}GlobalMaxPooling1D.className="GlobalMaxPooling1D",a.df.registerClass(GlobalMaxPooling1D);class GlobalPooling2D extends r.b{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Object(o.a)(this.dataFormat),this.inputSpec=[new r.a({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new l.c}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class GlobalAveragePooling2D extends GlobalPooling2D{call(t,e){return Object(a.Af)(()=>{const e=Object(c.b)(t);return"channelsLast"===this.dataFormat?a.De(e,[1,2]):a.De(e,[2,3])})}}GlobalAveragePooling2D.className="GlobalAveragePooling2D",a.df.registerClass(GlobalAveragePooling2D);class GlobalMaxPooling2D extends GlobalPooling2D{call(t,e){return Object(a.Af)(()=>{const e=Object(c.b)(t);return"channelsLast"===this.dataFormat?a.ze(e,[1,2]):a.ze(e,[2,3])})}}GlobalMaxPooling2D.className="GlobalMaxPooling2D",a.df.registerClass(GlobalMaxPooling2D)},708:function(t,e,i){"use strict";i.d(e,"a",(function(){return ZeroPadding2D}));var a=i(0),n=i(50),s=i(20),o=i(8),r=i(16);class ZeroPadding2D extends s.b{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?Object(n.b)():t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new o.e(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,i;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],i=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new o.e(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new o.e(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);i=t.padding[1]}this.padding=[e,i]}this.inputSpec=[new s.a({ndim:4})]}computeOutputShape(t){let e,i;return t=Object(r.a)(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,i=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,i]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,i=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,i,t[3]])}call(t,e){return Object(a.Af)(()=>{return e=Object(r.b)(t),i=this.padding,s=this.dataFormat,Object(a.Af)(()=>{if(4!==e.rank)throw new o.e("temporalPadding expects input tensor to be 4-D, but received a "+e.rank+"-D tensor.");if(null==i&&(i=[[1,1],[1,1]]),2!==i.length||2!==i[0].length||2!==i[1].length)throw new o.e("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s=Object(n.b)()),"channelsLast"!==s&&"channelsFirst"!==s)throw new o.e(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===s?[[0,0],[0,0],i[0],i[1]]:[[0,0],i[0],i[1],[0,0]],a.Pe(e,t)});var e,i,s})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}ZeroPadding2D.className="ZeroPadding2D",a.df.registerClass(ZeroPadding2D)}}]);